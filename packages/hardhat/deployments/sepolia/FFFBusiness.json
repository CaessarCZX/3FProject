{
  "address": "0x6b8B46420bd21E7Cd1207621a0e513B0E888245e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "NewMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "member",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "rank",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "NewRankReached",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Refund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalRequest",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_member",
          "type": "address"
        }
      ],
      "name": "checkActiveMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositMemberFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBusinessWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currentMember",
          "type": "address"
        }
      ],
      "name": "getMemberBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currentMember",
          "type": "address"
        }
      ],
      "name": "getTotalAffiliatesPerMember",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalMembers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uplineAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "memberEntrance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x5d17f8a6ddcde2dad2bcb1adb7c6ca7dcf324494df00f509c64a4514f3f3de09",
  "receipt": {
    "to": null,
    "from": "0x2C286498a497dA07cAa975ad435b0fD047F7C6aE",
    "contractAddress": "0x6b8B46420bd21E7Cd1207621a0e513B0E888245e",
    "transactionIndex": 48,
    "gasUsed": "1774917",
    "logsBloom": "0x
    "blockHash": "0x888e2f4ef105b922e51c2d2ede8aff7d53590fd088ee9dd619249f6f5d9fb99a",
    "transactionHash": "0x5d17f8a6ddcde2dad2bcb1adb7c6ca7dcf324494df00f509c64a4514f3f3de09",
    "logs": [
      {
        "transactionIndex": 48,
        "blockNumber": 7251649,
        "transactionHash": "0x5d17f8a6ddcde2dad2bcb1adb7c6ca7dcf324494df00f509c64a4514f3f3de09",
        "address": "0x6b8B46420bd21E7Cd1207621a0e513B0E888245e",
        "topics": [
          "0x7f48e4f7f3ef2c63408b16a799b8516cb879c145386aedd51a36938a02a1c283",
          "0x0000000000000000000000002c286498a497da07caa975ad435b0fd047f7c6ae"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000067587a20",
        "logIndex": 111,
        "blockHash": "0x888e2f4ef105b922e51c2d2ede8aff7d53590fd088ee9dd619249f6f5d9fb99a"
      }
    ],
    "blockNumber": 7251649,
    "cumulativeGasUsed": "6108109",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4B846D9d563D434d275e2d3a532c30B0574DcA2e"
  ],
  "numDeployments": 1,
  "solcInputHash": "fc062ecebf4e274a970f3d6dd8ac9603",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"NewMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"rank\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"NewRankReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WithdrawalRequest\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"checkActiveMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositMemberFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBusinessWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currentMember\",\"type\":\"address\"}],\"name\":\"getMemberBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currentMember\",\"type\":\"address\"}],\"name\":\"getTotalAffiliatesPerMember\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalMembers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uplineAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"memberEntrance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FFFBusiness.sol\":\"FFFBusiness\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/FFFBusiness.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.2 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract FFFBusiness {\\n    IERC20 public token;\\n    address payable private _businessWallet;\\n    uint128 private _totalMembers;\\n\\n   // To modify when contract is changed to USDT\\n    uint128 private constant _MIN_AMOUNT_TO_TRANSFER = 2000 * 10**6; // 2000 USDT\\n    uint128 private constant _MAX_MEMBER_BALANCE = 50000 * 10**6; // 50,000 USDT en ether (31.07 ETH)\\n    uint128 private constant _DEPOSIT_MULTIPLE = 1000 * 10**6; // M\\u00faltiplo de 1000 USDT en ether (0.62 ETH)\\n\\n    uint8 private constant _REFUND_TIER_ONE = 5;\\n    uint8 private constant _REFUND_TIER_TWO = 10;\\n    uint8 private constant _REFUND_TIER_THREE = 15;\\n    uint8 private constant _REFUND_TIER_FOUR = 20;\\n    uint8 private constant _REFUND_TIER_FIVE = 25;\\n\\n    uint8 private constant _QUALIFY_TO_IMPROVE_RANK = 3;\\n\\n    enum Ranks { Sapphire, Pearl, Ruby, Emerald, Diamond }\\n\\n    struct Member {\\n        address payable memberWallet;\\n        bool isActive;\\n        uint balance;\\n        Ranks rank;\\n    }\\n\\n    mapping(address => Member) private members;\\n    mapping(address => address[]) private enrolled;\\n\\n    event Deposit(address indexed from, uint amount, uint timestamp);\\n    event Transfer(address indexed from, address indexed to, uint amount, uint timestamp);\\n    event WithdrawalRequest(address indexed to, uint amount, uint timestamp);\\n    event Refund(address indexed to, uint amount, uint timestamp);\\n    event NewMember(address indexed member, uint timestamp);\\n    event NewRankReached(address indexed member, string rank, uint timestamp);\\n\\n    constructor(address tokenAddress) {\\n        _businessWallet = payable(msg.sender);\\n        token = IERC20(tokenAddress);  \\n        createMember(_businessWallet);\\n    }\\n\\n    modifier onlyActiveMember() {\\n        require(members[msg.sender].isActive, \\\"Miembro no activo\\\");\\n        _;\\n    }\\n\\n    modifier checkValidAddress(address _recipient) {\\n        require(_recipient != address(0), \\\"Direccion invalida\\\");\\n        _;\\n    }\\n\\n    // Only for development\\n    function getBusinessWallet() public view returns (address) {\\n        return _businessWallet;\\n    }\\n\\n    function getTotalMembers() public view returns (uint) {\\n        return _totalMembers;\\n    }\\n    // =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\\n\\n    receive() external payable {}\\n\\n    function deposit() public payable {}\\n\\n    function depositMemberFunds(uint _amount) public {\\n        require(_amount <= token.balanceOf(msg.sender), \\\"No cuentas con USDT en tu wallet\\\");\\n        require(_amount >= _MIN_AMOUNT_TO_TRANSFER, \\\"Deposito minimo es de 2000 USDT\\\");\\n        require(_amount % _DEPOSIT_MULTIPLE == 0, \\\"Solo puede depositar de mil en mil\\\");\\n\\n        Member storage member = members[msg.sender];\\n        uint newTotalBalance = member.balance + _amount;\\n        require(newTotalBalance <= _MAX_MEMBER_BALANCE, \\\"Has alcanzado el limite maxiomo de 50,000 USDT\\\");\\n\\n        require(token.transferFrom(msg.sender, address(this), _amount), \\\"Transferencia fallida\\\");\\n\\n        member.balance += _amount;\\n        emit Deposit(msg.sender, _amount, block.timestamp);\\n\\n        uint refundToMember = _calculateRefund(_amount, member.rank);\\n        uint refundToBusiness = _amount - refundToMember;\\n\\n        _processPayment(_businessWallet, refundToBusiness);\\n        _processPayment(payable(msg.sender), refundToMember);\\n        emit Refund(msg.sender, refundToMember, block.timestamp);\\n    }\\n\\n    function memberEntrance(address _uplineAddress, uint _amount) public {\\n        if (!members[msg.sender].isActive) {\\n            createMember(payable(msg.sender));\\n        }\\n        if (_uplineAddress != address(0)) {\\n            enrolled[_uplineAddress].push(msg.sender);\\n            _updateMemberRank(_uplineAddress);\\n        }\\n\\n        depositMemberFunds(_amount);\\n    }\\n\\n    function getMemberBalance(address _currentMember) public view returns(uint) {\\n        return members[_currentMember].balance;\\n    }\\n\\n    function getTotalAffiliatesPerMember(address _currentMember) public view returns(uint) {\\n        return enrolled[_currentMember].length;\\n    }\\n\\n    function checkActiveMember(address _member) public view returns(bool) {\\n        return members[_member].isActive;\\n    }\\n\\n    function _processPayment(address payable _to, uint _amount) private {\\n        require(_amount > 0, \\\"La cantidad a tranferir debe ser mayor a cero\\\");\\n        require(token.transfer(_to, _amount), \\\"Ha fallado la tranferencia\\\");\\n    }\\n\\n    function _calculateRefund(uint _amount, Ranks _rank) private pure returns (uint) {\\n        uint refundPercent;\\n        if (_rank == Ranks.Diamond) refundPercent = _REFUND_TIER_FIVE;\\n        else if (_rank == Ranks.Emerald) refundPercent = _REFUND_TIER_FOUR;\\n        else if (_rank == Ranks.Ruby) refundPercent = _REFUND_TIER_THREE;\\n        else if (_rank == Ranks.Pearl) refundPercent = _REFUND_TIER_TWO;\\n        else refundPercent = _REFUND_TIER_ONE;\\n\\n        return (_amount * refundPercent) / 100;\\n    }\\n\\n    function _updateMemberRank(address _uplineAddress) private {\\n        Member storage member = members[_uplineAddress];\\n        uint referralCount = enrolled[_uplineAddress].length;\\n\\n        if (referralCount / _QUALIFY_TO_IMPROVE_RANK >= 5 && member.rank != Ranks.Diamond) {\\n            member.rank = Ranks.Diamond;\\n            emit NewRankReached(_uplineAddress, \\\"Diamond\\\", block.timestamp);\\n        } else if (referralCount / _QUALIFY_TO_IMPROVE_RANK >= 4 && member.rank != Ranks.Emerald) {\\n            member.rank = Ranks.Emerald;\\n            emit NewRankReached(_uplineAddress, \\\"Emerald\\\", block.timestamp);\\n        } else if (referralCount / _QUALIFY_TO_IMPROVE_RANK >= 3 && member.rank != Ranks.Ruby) {\\n            member.rank = Ranks.Ruby;\\n            emit NewRankReached(_uplineAddress, \\\"Ruby\\\", block.timestamp);\\n        } else if (referralCount / _QUALIFY_TO_IMPROVE_RANK >= 2 && member.rank != Ranks.Pearl) {\\n            member.rank = Ranks.Pearl;\\n            emit NewRankReached(_uplineAddress, \\\"Pearl\\\", block.timestamp);\\n        }\\n    }\\n\\n    function createMember(address payable _newMember) internal checkValidAddress(_newMember) {\\n        members[_newMember] = Member({\\n            memberWallet: _newMember,\\n            isActive: true,\\n            balance: 0,\\n            rank: Ranks.Sapphire\\n        });\\n\\n        _totalMembers++;\\n        emit NewMember(_newMember, block.timestamp);\\n    }\\n}\\n\",\"keccak256\":\"0xfc2620adc9f3fd20fbce9ce833536f7a4665f394259bf2398e227d30255c3740\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063ca55753a11610059578063ca55753a14610152578063d0e30db01461018f578063d194770514610199578063de36b775146101d6578063fc0c546a146101ff57610091565b80637f7efd1a146100965780638f180305146100d35780639f8dcfe9146100fe578063aa331db51461012757610091565b3661009157005b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190611221565b61022a565b6040516100ca9190611269565b60405180910390f35b3480156100df57600080fd5b506100e8610283565b6040516100f5919061129d565b60405180910390f35b34801561010a57600080fd5b50610125600480360381019061012091906112e4565b6102bb565b005b34801561013357600080fd5b5061013c61070b565b6040516101499190611320565b60405180910390f35b34801561015e57600080fd5b5061017960048036038101906101749190611221565b610735565b604051610186919061129d565b60405180910390f35b610197610781565b005b3480156101a557600080fd5b506101c060048036038101906101bb9190611221565b610783565b6040516101cd919061129d565b60405180910390f35b3480156101e257600080fd5b506101fd60048036038101906101f8919061133b565b6107cf565b005b34801561020b57600080fd5b50610214610918565b60405161022191906113da565b60405180910390f35b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff169050919050565b6000600260009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016103149190611320565b602060405180830381865afa158015610331573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610355919061140a565b811115610397576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038e90611494565b60405180910390fd5b63773594006fffffffffffffffffffffffffffffffff168110156103f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e790611500565b60405180910390fd5b6000633b9aca006fffffffffffffffffffffffffffffffff1682610414919061154f565b14610454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044b906115f2565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008282600101546104a99190611641565b9050640ba43b74006fffffffffffffffffffffffffffffffff16811115610505576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fc906116e7565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161056293929190611707565b6020604051808303816000875af1158015610581573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a5919061176a565b6105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db906117e3565b60405180910390fd5b828260010160008282546105f89190611641565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158442604051610647929190611803565b60405180910390a2600061066c848460020160009054906101000a900460ff1661093c565b90506000818561067c919061182c565b90506106aa600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682610a4a565b6106b43383610a4a565b3373ffffffffffffffffffffffffffffffffffffffff167f73f04af9dcc582a923ec15d3eea990fe34adabfff2879e28d44572e01a54abb683426040516106fc929190611803565b60405180910390a25050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160149054906101000a900460ff1661082d5761082c33610b6e565b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461090b57600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061090a82610dc6565b5b610914816102bb565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060048081111561095257610951611860565b5b83600481111561096557610964611860565b5b0361097657601960ff169050610a29565b6003600481111561098a57610989611860565b5b83600481111561099d5761099c611860565b5b036109ae57601460ff169050610a28565b600260048111156109c2576109c1611860565b5b8360048111156109d5576109d4611860565b5b036109e657600f60ff169050610a27565b600160048111156109fa576109f9611860565b5b836004811115610a0d57610a0c611860565b5b03610a1e57600a60ff169050610a26565b600560ff1690505b5b5b5b60648185610a37919061188f565b610a4191906118d1565b91505092915050565b60008111610a8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8490611974565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610ae89291906119b5565b6020604051808303816000875af1158015610b07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2b919061176a565b610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6190611a2a565b60405180910390fd5b5050565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd590611a96565b60405180910390fd5b60405180608001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020016001151581526020016000815260200160006004811115610c2957610c28611860565b5b815250600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083151502179055506040820151816001015560608201518160020160006101000a81548160ff02191690836004811115610d0757610d06611860565b5b02179055509050506002600081819054906101000a90046fffffffffffffffffffffffffffffffff1680929190610d3d90611ad2565b91906101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550508173ffffffffffffffffffffffffffffffffffffffff167f7f48e4f7f3ef2c63408b16a799b8516cb879c145386aedd51a36938a02a1c28342604051610dba919061129d565b60405180910390a25050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090506005600360ff1682610e6291906118d1565b10158015610ea55750600480811115610e7e57610e7d611860565b5b8260020160009054906101000a900460ff166004811115610ea257610ea1611860565b5b14155b15610f2a5760048260020160006101000a81548160ff02191690836004811115610ed257610ed1611860565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167fa2c7f946295ebff83055d73f7da6fa94898bfa377f1cd0b2c4faaea8705b06a842604051610f1d9190611b56565b60405180910390a26111b9565b6004600360ff1682610f3c91906118d1565b10158015610f80575060036004811115610f5957610f58611860565b5b8260020160009054906101000a900460ff166004811115610f7d57610f7c611860565b5b14155b156110055760038260020160006101000a81548160ff02191690836004811115610fad57610fac611860565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167fa2c7f946295ebff83055d73f7da6fa94898bfa377f1cd0b2c4faaea8705b06a842604051610ff89190611bd0565b60405180910390a26111b8565b60038060ff168261101691906118d1565b1015801561105a57506002600481111561103357611032611860565b5b8260020160009054906101000a900460ff16600481111561105757611056611860565b5b14155b156110df5760028260020160006101000a81548160ff0219169083600481111561108757611086611860565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167fa2c7f946295ebff83055d73f7da6fa94898bfa377f1cd0b2c4faaea8705b06a8426040516110d29190611c4a565b60405180910390a26111b7565b6002600360ff16826110f191906118d1565b1015801561113557506001600481111561110e5761110d611860565b5b8260020160009054906101000a900460ff16600481111561113257611131611860565b5b14155b156111b65760018260020160006101000a81548160ff0219169083600481111561116257611161611860565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff167fa2c7f946295ebff83055d73f7da6fa94898bfa377f1cd0b2c4faaea8705b06a8426040516111ad9190611cc4565b60405180910390a25b5b5b5b505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111ee826111c3565b9050919050565b6111fe816111e3565b811461120957600080fd5b50565b60008135905061121b816111f5565b92915050565b600060208284031215611237576112366111be565b5b60006112458482850161120c565b91505092915050565b60008115159050919050565b6112638161124e565b82525050565b600060208201905061127e600083018461125a565b92915050565b6000819050919050565b61129781611284565b82525050565b60006020820190506112b2600083018461128e565b92915050565b6112c181611284565b81146112cc57600080fd5b50565b6000813590506112de816112b8565b92915050565b6000602082840312156112fa576112f96111be565b5b6000611308848285016112cf565b91505092915050565b61131a816111e3565b82525050565b60006020820190506113356000830184611311565b92915050565b60008060408385031215611352576113516111be565b5b60006113608582860161120c565b9250506020611371858286016112cf565b9150509250929050565b6000819050919050565b60006113a061139b611396846111c3565b61137b565b6111c3565b9050919050565b60006113b282611385565b9050919050565b60006113c4826113a7565b9050919050565b6113d4816113b9565b82525050565b60006020820190506113ef60008301846113cb565b92915050565b600081519050611404816112b8565b92915050565b6000602082840312156114205761141f6111be565b5b600061142e848285016113f5565b91505092915050565b600082825260208201905092915050565b7f4e6f206375656e74617320636f6e205553445420656e2074752077616c6c6574600082015250565b600061147e602083611437565b915061148982611448565b602082019050919050565b600060208201905081810360008301526114ad81611471565b9050919050565b7f4465706f7369746f206d696e696d6f2065732064652032303030205553445400600082015250565b60006114ea601f83611437565b91506114f5826114b4565b602082019050919050565b60006020820190508181036000830152611519816114dd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061155a82611284565b915061156583611284565b92508261157557611574611520565b5b828206905092915050565b7f536f6c6f207075656465206465706f7369746172206465206d696c20656e206d60008201527f696c000000000000000000000000000000000000000000000000000000000000602082015250565b60006115dc602283611437565b91506115e782611580565b604082019050919050565b6000602082019050818103600083015261160b816115cf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061164c82611284565b915061165783611284565b925082820190508082111561166f5761166e611612565b5b92915050565b7f48617320616c63616e7a61646f20656c206c696d697465206d6178696f6d6f2060008201527f64652035302c3030302055534454000000000000000000000000000000000000602082015250565b60006116d1602e83611437565b91506116dc82611675565b604082019050919050565b60006020820190508181036000830152611700816116c4565b9050919050565b600060608201905061171c6000830186611311565b6117296020830185611311565b611736604083018461128e565b949350505050565b6117478161124e565b811461175257600080fd5b50565b6000815190506117648161173e565b92915050565b6000602082840312156117805761177f6111be565b5b600061178e84828501611755565b91505092915050565b7f5472616e73666572656e6369612066616c6c6964610000000000000000000000600082015250565b60006117cd601583611437565b91506117d882611797565b602082019050919050565b600060208201905081810360008301526117fc816117c0565b9050919050565b6000604082019050611818600083018561128e565b611825602083018461128e565b9392505050565b600061183782611284565b915061184283611284565b925082820390508181111561185a57611859611612565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600061189a82611284565b91506118a583611284565b92508282026118b381611284565b915082820484148315176118ca576118c9611612565b5b5092915050565b60006118dc82611284565b91506118e783611284565b9250826118f7576118f6611520565b5b828204905092915050565b7f4c612063616e74696461642061207472616e666572697220646562652073657260008201527f206d61796f722061206365726f00000000000000000000000000000000000000602082015250565b600061195e602d83611437565b915061196982611902565b604082019050919050565b6000602082019050818103600083015261198d81611951565b9050919050565b600061199f826113a7565b9050919050565b6119af81611994565b82525050565b60006040820190506119ca60008301856119a6565b6119d7602083018461128e565b9392505050565b7f48612066616c6c61646f206c61207472616e666572656e636961000000000000600082015250565b6000611a14601a83611437565b9150611a1f826119de565b602082019050919050565b60006020820190508181036000830152611a4381611a07565b9050919050565b7f446972656363696f6e20696e76616c6964610000000000000000000000000000600082015250565b6000611a80601283611437565b9150611a8b82611a4a565b602082019050919050565b60006020820190508181036000830152611aaf81611a73565b9050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6000611add82611ab6565b91506fffffffffffffffffffffffffffffffff8203611aff57611afe611612565b5b600182019050919050565b7f4469616d6f6e6400000000000000000000000000000000000000000000000000600082015250565b6000611b40600783611437565b9150611b4b82611b0a565b602082019050919050565b60006040820190508181036000830152611b6f81611b33565b9050611b7e602083018461128e565b92915050565b7f456d6572616c6400000000000000000000000000000000000000000000000000600082015250565b6000611bba600783611437565b9150611bc582611b84565b602082019050919050565b60006040820190508181036000830152611be981611bad565b9050611bf8602083018461128e565b92915050565b7f5275627900000000000000000000000000000000000000000000000000000000600082015250565b6000611c34600483611437565b9150611c3f82611bfe565b602082019050919050565b60006040820190508181036000830152611c6381611c27565b9050611c72602083018461128e565b92915050565b7f506561726c000000000000000000000000000000000000000000000000000000600082015250565b6000611cae600583611437565b9150611cb982611c78565b602082019050919050565b60006040820190508181036000830152611cdd81611ca1565b9050611cec602083018461128e565b9291505056fea2646970667358221220fc0e394845091da34622dd3f08e0173fbba8c501bd42948c08b72d1049dae36064736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1033,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "token",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)255"
      },
      {
        "astId": 1035,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "_businessWallet",
        "offset": 0,
        "slot": "1",
        "type": "t_address_payable"
      },
      {
        "astId": 1037,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "_totalMembers",
        "offset": 0,
        "slot": "2",
        "type": "t_uint128"
      },
      {
        "astId": 1097,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "members",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(Member)1092_storage)"
      },
      {
        "astId": 1102,
        "contract": "contracts/FFFBusiness.sol:FFFBusiness",
        "label": "enrolled",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)255": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_enum(Ranks)1082": {
        "encoding": "inplace",
        "label": "enum FFFBusiness.Ranks",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_struct(Member)1092_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FFFBusiness.Member)",
        "numberOfBytes": "32",
        "value": "t_struct(Member)1092_storage"
      },
      "t_struct(Member)1092_storage": {
        "encoding": "inplace",
        "label": "struct FFFBusiness.Member",
        "members": [
          {
            "astId": 1084,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "memberWallet",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 1086,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "isActive",
            "offset": 20,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 1088,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1091,
            "contract": "contracts/FFFBusiness.sol:FFFBusiness",
            "label": "rank",
            "offset": 0,
            "slot": "2",
            "type": "t_enum(Ranks)1082"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}